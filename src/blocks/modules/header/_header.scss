@use "sass:math";

.navbar {
  &::before {
    background-color: rgba($white, .9);
    content: "";
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: -1;
    @include transition(opacity .5s cubic-bezier(.16, 1, .3, 1));

    @supports (backdrop-filter: blur(10px)) {
      background-color: rgba($white, .5);
      backdrop-filter: blur(10px);
    }
  }

  .is-scrolled & {
    &::before {
      opacity: 1;
    }
  }
}

.navbar-container {
  align-items: center;
  display: flex;
  justify-content: space-between;
  padding-bottom: 16px;
  padding-top: 16px;

  @include media-breakpoint-up(md) {
    padding-bottom: 20px;
    padding-top: 20px;
  }

  @include media-breakpoint-up(xl) {
    padding-bottom: 24px;
    padding-top: 24px;
  }
}

.brand {
  align-items: center;
  color: $black;
  display: flex;
  font-size: 10px;

  @include media-breakpoint-up(md) {
    font-size: 12px;
  }

  @include media-breakpoint-up(lg) {
    font-size: 14px;
  }

  @include media-breakpoint-up(xxl) {
    font-size: 19px;
  }

  &__logo {
    flex-shrink: 0;
    height: math.div(85, 21) * 1em;
    margin-right: math.div(20, 19) * 1em;
    width: math.div(48, 21) * 1em;
  }

  &__title {
    font-size: inherit;
    width: 20em;

    @include media-breakpoint-up(md) {
      width: 25em;
    }

    strong {
      display: inline-block;
      font-weight: 800;
      margin-bottom: .1em;
      text-transform: uppercase;
      vertical-align: top;
    }
  }

  &:hover {
    color: $black;
  }
}

.navbar-toggler {
  appearance: none;
  background-color: transparent;
  border: none;
  flex-shrink: 0;
  height: 30px;
  padding: 0;
  position: relative;
  width: 30px;
  z-index: $zindex-fixed + 2;

  &::before, &::after {
    background-repeat: no-repeat;
    background-size: cover;
    content: "";
    height: 100%;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate3d(-50%, -50%, 0);
    width: 100%;
    @include transition(all .5s cubic-bezier(.16, 1, .3, 1));
  }

  &::before {
    background-image: escape-svg(url("data:image/svg+xml,<svg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'><circle cx='3' cy='3' r='3' fill='#{$gray-900}'/><circle cx='3' cy='15' r='3' fill='#{$gray-900}'/><circle cx='3' cy='27' r='3' fill='#{$gray-900}'/><circle cx='15' cy='3' r='3' fill='#{$gray-900}'/><circle cx='15' cy='15' r='3' fill='#{$gray-900}'/><circle cx='15' cy='27' r='3' fill='#{$gray-900}'/><circle cx='27' cy='3' r='3' fill='#{$gray-900}'/><circle cx='27' cy='15' r='3' fill='#{$gray-900}'/><circle cx='27' cy='27' r='3' fill='#{$gray-900}'/></svg>"));
  }

  &::after {
    background-image: escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='32' height='32' viewBox='0 0 32 32'><path stroke='#{$gray-900}' stroke-linecap='square' stroke-width='2' d='M1.9 1.9 30 30M30.1 1.9 2 30'/></svg>"));
  }

  &.collapsed {
    &::after {
      opacity: 0;
      transform: translate3d(-50%, -50%, 0) scale(0);
    }
  }

  &:not(.collapsed) {
    &::before {
      opacity: 0;
      transform: translate3d(-50%, -50%, 0) scale(0);
    }
  }
}

.navbar-collapse {
  @include media-breakpoint-down(xl) {
    background-color: $white;
    background-image: linear-gradient(116deg, rgba(200, 251, 255, .35), rgba(156, 213, 255, .3) 30%, rgba(32, 76, 249, .15) 60%, rgba(232, 32, 249, .15));
    background-repeat: no-repeat;
    display: block;
    height: auto !important;
    max-width: 360px;
    overflow: hidden !important;
    padding: 72px 30px 40px;
    position: fixed;
    right: calc(50vw - #{get-container-max-width(lg) * .5 + 30px} + var(--bs-gutter-x));
    top: 0;
    width: 100%;
    z-index: $zindex-fixed;
    @include transition(all .5s cubic-bezier(.16, 1, .3, 1));
  }

  @include media-breakpoint-down(lg) {
    right: calc(50vw - #{get-container-max-width(md) * .5 + 30px} + var(--bs-gutter-x));
  }

  @include media-breakpoint-down(md) {
    padding-bottom: 30px;
    right: calc(50vw - #{get-container-max-width(sm) * .5 + 30px} + var(--bs-gutter-x));
  }

  @include media-breakpoint-down(sm) {
    right: 0;
  }

  &::before {
    @include media-breakpoint-down(xl) {
      background-image: url(../i/menu-bg.avif);
      background-repeat: no-repeat;
      background-size: contain;
      bottom: 50%;
      content: "";
      height: 1.34*290px;
      position: absolute;
      right: 50%;
      transform: translate(72%, 75%);
      width: 1.34*370px;
      z-index: -1;

      .no-avif & {
        background-image: url(../i/menu-bg.webp);
      }

      .no-avif.no-webp & {
        background-image: url(../i/menu-bg.png);
      }
    }

    @include media-breakpoint-down(lg) {
      height: 290px;
      transform: translate(79%, 69%);
      width: 370px;
    }
  }

  &:not(.show) {
    display: block;

    @include media-breakpoint-down(xl) {
      opacity: 0;
      transform: translateY(-20px);
      visibility: hidden;
    }
  }

  &.collapsing {
    height: auto;
    overflow: visible;
  }
}

.navbar-nav {
  list-style: none;
  margin-bottom: 0;
  padding-left: 0;

  @include media-breakpoint-up(xl) {
    display: flex;
  }

  .nav-item {
    font-size: 14px;
    line-height: 1.4;

    @include media-breakpoint-up(lg) {
      font-size: 16px;
      line-height: 1.5;
    }

    @include media-breakpoint-up(xl) {
      line-height: 1.2;
      white-space: nowrap;
    }

    @include media-breakpoint-up(xxl) {
      font-size: 18px;
    }

    &:not(:last-child) {
      @include media-breakpoint-down(xl) {
        margin-bottom: 30px;
      }

      @include media-breakpoint-down(lg) {
        margin-bottom: 20px;
      }

      @include media-breakpoint-up(xl) {
        margin-right: 40px;
      }

      @include media-breakpoint-up(xxl) {
        margin-right: 60px;
      }
    }
  }

  .nav-link {
    display: block;
  }
}

.navbar-backdrop {
  background-color: $modal-backdrop-bg;
  height: 100%;
  left: 0;
  opacity: $modal-backdrop-opacity;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: $zindex-fixed - 1;
  @include transition(opacity .5s cubic-bezier(.16, 1, .3, 1));

  &:not(.show) {
    opacity: 0;
  }
}
